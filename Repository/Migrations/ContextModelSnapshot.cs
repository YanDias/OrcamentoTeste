// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Orcamento", b =>
                {
                    b.Property<int>("IdOrcamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("NomeCliente")
                        .IsRequired();

                    b.HasKey("IdOrcamento");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("Domain.Produto", b =>
                {
                    b.Property<int>("idProduto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SubCategoriaidSub");

                    b.Property<double>("Valor");

                    b.Property<string>("nome");

                    b.HasKey("idProduto");

                    b.HasIndex("SubCategoriaidSub");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Domain.ProdutoOrcamento", b =>
                {
                    b.Property<int>("IdProdutoOrcamento")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrcamentoIdOrcamento");

                    b.Property<int>("ProdutoidProduto");

                    b.Property<int>("Quantidade");

                    b.HasKey("IdProdutoOrcamento");

                    b.HasIndex("OrcamentoIdOrcamento");

                    b.HasIndex("ProdutoidProduto");

                    b.ToTable("ProdutosOrcamentos");
                });

            modelBuilder.Entity("Domain.SubCategoria", b =>
                {
                    b.Property<int>("idSub")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nome")
                        .IsRequired();

                    b.HasKey("idSub");

                    b.ToTable("Subcategorias");
                });

            modelBuilder.Entity("Domain.Produto", b =>
                {
                    b.HasOne("Domain.SubCategoria", "SubCategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaidSub");
                });

            modelBuilder.Entity("Domain.ProdutoOrcamento", b =>
                {
                    b.HasOne("Domain.Orcamento", "Orcamento")
                        .WithMany()
                        .HasForeignKey("OrcamentoIdOrcamento")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoidProduto")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
